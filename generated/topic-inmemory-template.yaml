---
apiVersion: v1
kind: Template
metadata:
  labels:
    app: enmasse
  name: topic-inmemory
objects:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      address_config: address-config-${NAME}
      app: enmasse
      group_id: "${NAME}"
    name: "${NAME}"
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: enmasse
          group_id: "${NAME}"
          role: broker
      spec:
        containers:
        - env:
          - name: TOPIC_NAME
            value: "${ADDRESS}"
          - name: GROUP_ID
            value: "${NAME}"
          image: "${BROKER_REPO}:latest"
          lifecycle:
            preStop:
              exec:
                command:
                - "/opt/artemis-shutdown-hook/bin/artemis-shutdown-hook"
          livenessProbe:
            tcpSocket:
              port: amqp
          name: broker
          ports:
          - containerPort: 5673
            name: amqp
          - containerPort: 61616
            name: core
          volumeMounts:
          - mountPath: "/var/run/artemis"
            name: vol-${NAME}
        - env:
          - name: LINK_CAPACITY
            value: "${ROUTER_LINK_CAPACITY}"
          - name: TOPIC_NAME
            value: "${ADDRESS}"
          image: "${ROUTER_REPO}:latest"
          livenessProbe:
            tcpSocket:
              port: amqp
          name: router
          ports:
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 55673
            name: internal
            protocol: TCP
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 256Mi
        - env:
          - name: TOPIC_NAME
            value: "${ADDRESS}"
          image: "${TOPIC_FORWARDER_REPO}:latest"
          livenessProbe:
            httpGet:
              path: "/health"
              port: health
          name: forwarder
          ports:
          - containerPort: 8080
            name: health
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 128Mi
        volumes:
        - emptyDir: {}
          name: vol-${NAME}
        - configMap:
            name: hawkular-config-${NAME}
          name: hawkular-openshift-agent
- apiVersion: v1
  data:
    "${ADDRESS}": '{"store_and_forward": true, "multicast": true}'
  kind: ConfigMap
  metadata:
    labels:
      app: enmasse
      group_id: "${NAME}"
      type: address-config
    name: address-config-${NAME}
- apiVersion: v1
  data:
    hawkular-openshift-agent: '{"endpoints": [{"collection_interval": "60s", "metrics":
      [{"id": "VM Heap Memory Used", "name": "java.lang:type=Memory#HeapMemoryUsage#used",
      "type": "gauge"}], "path": "/jolokia", "port": 8161, "protocol": "http", "type":
      "jolokia"}]}'
  kind: ConfigMap
  metadata:
    name: hawkular-config-${NAME}
parameters:
- description: Storage capacity required for volume claims
  name: STORAGE_CAPACITY
  value: 2Gi
- description: The link capacity setting for router
  name: ROUTER_LINK_CAPACITY
  value: '50'
- description: A valid name for the instance
  name: NAME
  required: true
- description: The address to use for the topic
  name: ADDRESS
  required: true
